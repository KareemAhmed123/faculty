package com.faculty.domain;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.validation.Valid;

@Entity
public class Faculty extends AbstractEntity<Faculty> {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long id;
//	@ManyToMany(cascade = CascadeType.ALL)
//	private List<Specialization> specializations = new ArrayList<>();
	@ManyToMany(cascade = CascadeType.ALL)
	@Valid
	private List<Course> course = new ArrayList<>();

	private boolean isAvailability;

	public Faculty(String userProfile) {

	}

	public Faculty() {

	}

	public List<Specialization> getSpecializations() {
		return specializations;
	}

	public void setSpecializations(List<Specialization> specializations) {
		this.specializations = specializations;
	}

	public List<Course> getCourse() {
		return course;
	}


	public void setCourse(List<Course> course) {
		this.course = course;
	}

	public boolean isAvailability() {
		return isAvailability;
	}

	public void setAvailability(boolean isAvailability) {
		this.isAvailability = isAvailability;
	}

	public void addCourse(Course course) {
		this.course.add(course);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Faculty other = (Faculty) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;

		return true;
	}

}
